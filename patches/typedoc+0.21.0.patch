diff --git a/node_modules/typedoc/dist/lib/application.js b/node_modules/typedoc/dist/lib/application.js
index d8c786b..3949b4d 100644
--- a/node_modules/typedoc/dist/lib/application.js
+++ b/node_modules/typedoc/dist/lib/application.js
@@ -214,10 +214,10 @@ let Application = Application_1 = class Application extends component_1.Childabl
         const programs = entryPoints.map((e) => e.program);
         this.logger.verbose(`Converting with ${programs.length} programs`);
         const errors = array_1.flatMap(programs, ts.getPreEmitDiagnostics);
-        if (errors.length) {
-            this.logger.diagnostics(errors);
-            return;
-        }
+        // if (errors.length) {
+        //     this.logger.diagnostics(errors);
+        //     return;
+        // }
         if (this.options.getValue("emit")) {
             for (const program of programs) {
                 program.emit();
diff --git a/node_modules/typedoc/dist/lib/utils/package-manifest.js b/node_modules/typedoc/dist/lib/utils/package-manifest.js
index 536ba34..d2c0016 100644
--- a/node_modules/typedoc/dist/lib/utils/package-manifest.js
+++ b/node_modules/typedoc/dist/lib/utils/package-manifest.js
@@ -151,7 +151,11 @@ exports.ignorePackage = Symbol("ignorePackage");
 function getTsEntryPointForPackage(logger, packageJsonPath, packageJson) {
     let packageMain = "index.js"; // The default, per the npm docs.
     let packageTypes = null;
-    if (hasOwnProperty(packageJson, "main") &&
+    if (hasOwnProperty(packageJson, typeDocEntry) && 
+        typeof packageJson.typeDocEntry == "string") {
+        packageMain = packageJson.typeDocEntry;
+    }
+    else if (hasOwnProperty(packageJson, "main") &&
         typeof packageJson.main == "string") {
         packageMain = packageJson.main;
     }
